"serviceWorker"in navigator&&navigator.serviceWorker.register("/ligature/lsw.js").then(function(a){console.log("Service worker registration successful")})["catch"](function(a){console.error("Service worker registration failed",a)});
function e(a){return document.getElementById(a)}function setSelectionRange(a,b,c){if(a.setSelectionRange)a.focus(),a.setSelectionRange(b,c);else if(a.createTextRange){var d=a.createTextRange();d.collapse(!0),d.moveEnd("character",c),d.moveStart("character",b),d.select()}else a.focus()}function night(a){a?"localStorage"in window&&(nightEnabled="true"==localStorage.getItem("nightEnabled")):nightEnabled=!nightEnabled,document.body.classList.toggle("night",nightEnabled),"localStorage"in window&&localStorage.setItem("nightEnabled",nightEnabled)}function setAppSize(){$app.style.height=window.innerHeight+"px",$app.style.width=window.innerWidth+"px"}var nightEnabled=!1,$app=e("app-container"),keybindings={66:function(){$(".add-book").click()},78:function(){eventStack.trigger("newNote")},88:function(){$("#delete-note").click()},87:function(){$("#wordcount").click()},82:function(){$(".note-title.clickable").click()},190:night};$app.addEventListener("keydown",function(a){a.altKey&&keybindings[a.keyCode.toString()]&&(a.preventDefault(),keybindings[a.keyCode.toString()]())}),window.addEventListener("resize",setAppSize),setAppSize(),night(!0);
function htmlEscape(a){return String(a).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}function parseNotelist(){notelist.each(function(a){-1==bookIDs.indexOf(a.get("bookID"))&&bookIDs.push(a.get("bookID"))}),bookIDs.forEach(function(a){notesInBook=new NoteList(_.filter(notelist.models,function(b){return b.get("bookID")==a})),booklist.push(new Book({bookID:a,notelist:notesInBook}))}),Backbone.history.firstLoad&&(Backbone.history.start({pushState:!0,root:"/ligature"}),hashHistory.pop())}var currentBookID,currentBook,currentNote,currentNoteSaved=!0,updateTimer,hashHistory=[];Backbone.history.on("route",function(){hashHistory.push(!0)}),window.addEventListener("hashchange",function(){hashHistory.pop()||location.reload()});var Note=Backbone.Model.extend({idAttribute:"serial",urlRoot:"/ligature/api",defaults:{title:"Note",content:"",lastEdited:(new Date).getTime()},updateLastEdited:function(){this.set("lastEdited",(new Date).getTime()),booklist.findWhere({bookID:this.get("bookID")}).get("notelist").sort(),booklist.sort()},saveError:function(a,b){200!=b.status&&modal.call({prompt:"There was an error saving the note!"})},updateTitle:function(a){this.set("title",htmlEscape(a)),this.updateLastEdited(),this.save({},{error:this.saveError})},updateContent:function(a){this.set("content",a),this.updateLastEdited(),this.save({},{error:this.saveError})},validate:function(a){return a.title?a.serial?a.lastEdited?void 0:"A last-edited JavaScript timestamp must be present!":"A serial for a note was not provided!":"A title is required!"}}),NoteList=Backbone.Collection.extend({url:"/ligature/api",model:Note,comparator:function(a){return-1*a.get("lastEdited")}}),Book=Backbone.Model.extend({urlRoot:"/ligature/api",idAttribute:"bookID",validate:function(a){return a.bookID?void 0:"A book ID is required!"}}),BookList=Backbone.Collection.extend({url:"/ligature/api",model:Book,comparator:function(a){var b=a.get("notelist").first();return b&&-1*b.get("lastEdited")||-(new Date).getTime()}}),NoteView=Backbone.View.extend({id:"content-internal",initialize:function(a){this.eventStack=a.eventStack,this.eventStack.once("noteSelected",this.putAway,this),window.addEventListener("beforeunload",this.navAway),clearTimeout(updateTimer)},events:{"click .note-title":"renameNote","click #add-note":"addNote","click #delete-note":"confirmDeleteNote","click #wordcount":"wordcount","input textarea":"updateTracker"},saveNote:function(){if(this.$("textarea.note-content").length){clearTimeout(updateTimer);var a=this.$("textarea.note-content").val();a!=this.model.get("content")&&this.model.updateContent(a)}currentNoteSaved=!0},navAway:function(a){return currentNoteSaved?null:(a.returnValue="Your note isn't saved yet!","Your note isn't saved yet!")},updateTracker:function(a){currentNoteSaved=!1,clearTimeout(updateTimer),updateTimer=setTimeout(function(){this.saveNote(),$contentInternal=$("#content-internal")[0],$contentInternal.classList.add("synced"),setTimeout(function(){$contentInternal.classList.remove("synced")},10)}.bind(this),2500)},putAway:function(a){clearTimeout(updateTimer),this.saveNote(),this.remove(),this.off(),window.removeEventListener("beforeunload",this.navAway),this.eventStack.off("noteSelected",this.putAway),a()},renameNote:function(){modal.call({prompt:"New note title",type:"prompt",defaultText:this.model.escape("title"),success:function(a){a.trim()&&(this.$(".note-title.clickable").html(a),this.model.updateTitle(a))}.bind(this)})},addNote:function(){this.eventStack.trigger("newNote")},confirmDeleteNote:function(){modal.call({prompt:"Delete this note?",type:"confirm",success:this.deleteNote.bind(this)})},deleteNote:function(){clearTimeout(updateTimer),this.remove(),this.off(),this.model.destroy(),this.eventStack.off("noteSelected",this.putAway);var a=location.href[location.href.indexOf("/ligature")+10];this.eventStack.trigger("bookSelected"),ligature.navigate(a,{trigger:!0})},wordcount:function(){this.saveNote();var a=this.model.escape("content").split(" ").length;modal.call({prompt:a.toString()+" words"})},render:function(){return this.$el.html('<div class="note-title clickable">'+this.model.escape("title")+'</div><textarea autofocus class="note-content scrolled" placeholder="Note Content">'+this.model.escape("content")+'</textarea><div id="options" class="icons"><div id="add-note" class="clickable">add</div><div id="delete-note" class="clickable">clear</div><div id="wordcount" class="clickable">done</div></div>'),this}}),EmptyNoteView=Backbone.View.extend({id:"content-internal",initialize:function(a){this.eventStack=a.eventStack,this.eventStack.once("noteSelected",this.putAway,this)},events:{"click #add-note":"addNote"},putAway:function(a){this.remove(),this.off(),this.eventStack.off("noteSelected",this.putAway),a()},addNote:function(){this.eventStack.trigger("newNote")},render:function(){return this.$el.html('<div id="options" class="icons"><div id="add-note" class="clickable">add</div></div>'),this}}),LigatureModalView=Backbone.View.extend({className:"modal-shade",events:{"click .pos":"onPosClick","click .neg":"onNegClick",keydown:"onInput"},initialize:function(){this.prompt=null,this.type=null,this.success=this.fail=void 0,this.defaultText="",this.visibility="hidden"},call:function(a){this.prompt=a.prompt||"Ligature",this.type=a.type||"alert",this.success=a.success,this.fail=a.fail,this.defaultText=a.defaultText&&a.defaultText.trim()||"",this.show()},show:function(){this.visibility="visible",this.render(),setTimeout(function(){document.getElementById("modal-container").className=this.visibility,this.$(".modal-input").focus()}.bind(this),50)},hide:function(){this.visibility="hidden",this.prompt="",this.type="alert",document.getElementById("modal-container").className=this.visibility},onInput:function(a){13==a.keyCode?(this.onPosClick(),a.preventDefault()):27==a.keyCode&&(this.onNegClick(),a.preventDefault())},onPosClick:function(a){this.hide(),this.success&&this.success(this.$("input").val())},onNegClick:function(a){this.hide(),this.fail&&this.fail(this.$("input").val())},render:function(){return this.$el.html('<div id="modal-internal" class="'+this.type+'"><div class="modal-prompt">'+this.prompt+'</div><input type="text" class="modal-input" value="'+this.defaultText+'"></input><button class="pos button">Confirm</button><button class="neg button">Cancel</button></div>'),this}}),NoteSnippetView=Backbone.View.extend({className:"note-id clickable",events:{click:"onNoteSelected"},onNoteSelected:function(){var a=this.model.get("bookID")+"/"+this.$el.attr("data-note-id");-1==location.href.indexOf(a)&&this.eventStack.trigger("noteSelected",function(){ligature.navigate(a,{trigger:!0}),$("textarea.note-content").focus()})},initialize:function(a){this.model.on("change",this.render,this),this.eventStack=a.eventStack},render:function(){return titler=this.model.escape("title"),contenter=this.model.escape("content").substr(0,200),this.$el.html("<div class='note-title'>"+titler+"</div><div class='note-content'>"+contenter+"</div>"),this.$el.attr("data-note-id",this.model.get("serial")),this}}),NoteSearchView=Backbone.View.extend({id:"searchbar",initialize:function(a){this.eventStack=a.eventStack,this.book=a.book},events:{keydown:"onKeydown"},onKeydown:function(a){13==a.keyCode&&this.eventStack.trigger("searchNote",$("#searchbar > input").val().toLowerCase())},render:function(){return this.$el.html("<input type='text'/>"),this}}),NoteListView=Backbone.View.extend({id:"note-internal",initialize:function(a){this.eventStack=a.eventStack,this.book=a.book,this.eventStack.on("newNote",this.onNewNotePrompt,this),this.collection.on("add remove sort",this.render,this),this.eventStack.once("bookSelected",this.putAway,this),this.eventStack.on("searchNote",this.search,this)},onNewNotePrompt:function(){modal.call({prompt:"New note serial",type:"prompt",success:this.onNewNote.bind(this)})},onNewNote:function(a){if(notelist.map(function(a){return a.get("serial")}).indexOf(a)>-1)return void modal.call({prompt:"A note with that serial already exists!"});if(a)if(/^\d/g.test(a))modal.call({prompt:"Sorry! Note serials cannot begin with a number."});else{var b=a,c=new Note({serial:b,bookID:this.book,title:a.split("-").join(" ").replace(/\w\S*/g,function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()})});notelist.unshift(c),this.collection.unshift(c),c.save({},{type:"post"});var d=this.book+"/"+b;this.eventStack.trigger("noteSelected",function(){ligature.navigate(d,{trigger:!0})}),$("textarea.note-content").focus()}},putAway:function(){this.remove(),this.off(),this.eventStack.off("bookSelected",this.putAway),this.eventStack.off("searchNote",this.search),this.eventStack.off("newNote",this.onNewNote),this.collection.off()},search:function(a){this.$el.html("");var b=new NoteSearchView({book:this.book,eventStack:this.eventStack});return this.$el.append(b.render().$el),matches=_.filter(this.collection.models,function(b){return b.get("title").toLowerCase().indexOf(a)>-1||b.get("content").toLowerCase().indexOf(a)>-1}),matches.forEach(function(a){var b=new NoteSnippetView({model:a,eventStack:this.eventStack});this.$el.append(b.render().$el)}.bind(this)),this},render:function(){this.$el.html("");var a=new NoteSearchView({book:this.book,eventStack:this.eventStack});return this.$el.append(a.render().$el),this.collection.each(function(a){var b=new NoteSnippetView({model:a,eventStack:this.eventStack});this.$el.append(b.render().$el)}.bind(this)),this}}),BookSnippetView=Backbone.View.extend({className:"book-id clickable",events:{click:"bookSelected"},initialize:function(a){this.model.on("change",this.render(),this),this.eventStack=a.eventStack},bookSelected:function(){currentBookID=this.$el.html(),-1==location.href.indexOf("#"+currentBookID)&&(this.eventStack.trigger("bookSelected"),this.eventStack.trigger("noteSelected",function(){ligature.navigate(currentBookID,{trigger:!0})}))},render:function(){return this.$el.html(this.model.get("bookID")),this}}),BookListView=Backbone.View.extend({id:"book-internal",events:{"click #logo":"refresh","click .add-book":"addBookPrompt"},initialize:function(a){this.eventStack=a.eventStack,this.collection.on("add remove sort",this.render,this)},refresh:function(){location.href="http://random.thelifelongtraveler.com/ligature"},addBookPrompt:function(){modal.call({prompt:"New book ID",type:"prompt",success:this.addBook.bind(this)})},addBook:function(a){var b=new NoteList;if(a){var c=a.toUpperCase();if(booklist.map(function(a){return a.get("bookID")}).indexOf(c)>-1)return void modal.call({prompt:"This book ID has been used already!"});var d=new Book({bookID:c,notelist:b});this.collection.add(d),this.eventStack.trigger("bookSelected"),this.eventStack.trigger("noteSelected",function(){ligature.navigate(c,{trigger:!0})})}else modal.call({prompt:"Invalid book ID! Please try again."})},render:function(){var a='<img id="logo" src="/ligature/assets/logo.png"/><div class="lig-button add-book clickable icons">add</div>';return this.$el.html(a),this.collection.each(function(a){var b=new BookSnippetView({model:a,eventStack:this.eventStack});this.$el.append(b.render().$el)}.bind(this)),this}}),eventStack=_.extend({},Backbone.Events),LigatureRouter=Backbone.Router.extend({routes:{":bookid/:noteid":"navNote",":bookid":"navBook","":"navAll","*default":"navHome"},navAll:function(){var a=booklist.first().get("bookID"),b=booklist.first().get("notelist").first().get("serial");ligature.navigate(a+"/"+b,{trigger:!0})},navHome:function(){var a=new BookListView({collection:booklist,eventStack:eventStack});$("#book-container").html(a.render().$el)},navNote:function(a,b){var c=booklist.findWhere({bookID:a});if(c){var d=c.get("notelist").findWhere({serial:b});if(d||(d=c.get("notelist").first()),d)var e=new NoteView({model:d,eventStack:eventStack});else var e=new EmptyNoteView({eventStack:eventStack});$("#content-container").html(e.render().$el),Backbone.history.firstLoad&&this.navBook(a,!0)}else this.navAll()},navBook:function(a,b){var c=booklist.findWhere({bookID:a});if(c){var d=new NoteListView({book:c.get("bookID"),collection:c.get("notelist"),eventStack:eventStack});if($("#note-container").html(d.render().$el),!b){if(currentNote=c.get("notelist").first()){var e=new NoteView({model:currentNote,eventStack:eventStack});hashHistory.push(!0),ligature.navigate(a+"/"+currentNote.get("serial"),{trigger:!1})}else var e=new EmptyNoteView({eventStack:eventStack});$("#content-container").html(e.render().$el)}}else this.navAll();Backbone.history.firstLoad&&this.navHome()}}),bookIDs=[],booklist=new BookList,notelist=new NoteList;notelist.fetch({success:parseNotelist,error:function(){modal.call({prompt:"There was an error loading the notes"})}});var ligature=new LigatureRouter;Backbone.history.firstLoad=!0,Backbone.history.on("route",function(){Backbone.history.firstLoad=!1});var modal=new LigatureModalView;$("#modal-container").html(modal.render().$el);